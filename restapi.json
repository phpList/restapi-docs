{
    "openapi": "3.0.0",
    "info": {
        "title": "phpList API Documentation",
        "description": "This is the OpenAPI documentation for phpList API.",
        "contact": {
            "email": "support@phplist.com"
        },
        "license": {
            "name": "AGPL-3.0-or-later",
            "url": "https://www.gnu.org/licenses/agpl.txt"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://www.phplist.com/api/v2",
            "description": "Production server"
        }
    ],
    "paths": {
        "/api/v2/administrators/attributes": {
            "get": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Gets a list of all admin attribute definitions.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all admin attribute definitions.",
                "operationId": "68b7d9433a6358436de121484f402e3b",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdminAttributeDefinition"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Create an admin attribute definition.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns created admin attribute definition.",
                "operationId": "5bee92e632fc1245eba1d29f00558a80",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass parameters to create admin attribute.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAdminAttributeDefinitionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminAttributeDefinition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/administrators/attributes/{definitionId}": {
            "get": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Gets attribute with specified ID.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a single attribute with specified ID.",
                "operationId": "9e57fc1f6a265beac32eb349f5c730f0",
                "parameters": [
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "Definition ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminAttributeDefinition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There is no attribute with that ID."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Update an admin attribute definition.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns updated admin attribute definition.",
                "operationId": "f9808a1d30aebafde1426e19dae9e8cf",
                "parameters": [
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "Definition ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass parameters to update admin attribute.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAdminAttributeDefinitionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminAttributeDefinition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Deletes an attribute definition.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Deletes a single admin attribute definition.",
                "operationId": "5e22c902d069355dd7b6ee6fac9309af",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "Definition ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/administrators/attribute-values/{adminId}/{definitionId}": {
            "get": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Gets admin attribute.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a single attribute.",
                "operationId": "993bda3c9e739aebc4691af2f2326f6a",
                "parameters": [
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "attribute definition id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "adminId",
                        "in": "path",
                        "description": "Administrator id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminAttributeValue"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There is no attribute with that ID."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Create/update an admin attribute.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns created/updated admin attribute.",
                "operationId": "675aaea8f721e9bb44ad4037a8cf2911",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "attribute definition id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "adminId",
                        "in": "path",
                        "description": "Administrator id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass parameters to create admin attribute.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "example": "United States"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminAttributeValue"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Deletes an attribute.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Deletes a single admin attribute.",
                "operationId": "4f76366b588001989ec8040c0335d2a4",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "attribute definition id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "adminId",
                        "in": "path",
                        "description": "Administrator id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/administrators/attribute-values/{adminId}": {
            "get": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Gets a list of all admin attributes.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all admin attributes.",
                "operationId": "3697baedcd4df34b5b8b78ef0b3238c5",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "adminId",
                        "in": "path",
                        "description": "Administrator id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdminAttributeValue"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/administrators": {
            "get": {
                "tags": [
                    "administrators"
                ],
                "summary": "Get Administrators",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Get list of administrators.",
                "operationId": "dfc888f94f2ce46ce7a2ae8e1d55ebbc",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Administrator"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            },
            "post": {
                "tags": [
                    "administrators"
                ],
                "summary": "Create Administrator",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Create a new administrator.",
                "operationId": "62e1c82af2ab59be7300fa99f73bc354",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Administrator data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAdministratorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Administrator created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Administrator"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/v2/administrators/{administratorId}": {
            "get": {
                "tags": [
                    "administrators"
                ],
                "summary": "Get Administrator",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Get administrator by ID.",
                "operationId": "7b0c7aa05f2c6230af358826c3e6755a",
                "parameters": [
                    {
                        "name": "administratorId",
                        "in": "path",
                        "description": "Administrator ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Administrator found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Administrator"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Administrator not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "administrators"
                ],
                "summary": "Update Administrator",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Update an administrator.",
                "operationId": "08cb2e738c87f73709980cb140528918",
                "parameters": [
                    {
                        "name": "administratorId",
                        "in": "path",
                        "description": "Administrator ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Administrator update data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAdministratorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Administrator updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Administrator"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Administrator not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "administrators"
                ],
                "summary": "Delete Administrator",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Delete an administrator.",
                "operationId": "18f8713da580af36ce4b9909a8a1c01e",
                "parameters": [
                    {
                        "name": "administratorId",
                        "in": "path",
                        "description": "Administrator ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Administrator deleted successfully"
                    },
                    "404": {
                        "description": "Administrator not found"
                    }
                }
            }
        },
        "/api/v2/password-reset/request": {
            "post": {
                "tags": [
                    "password-reset"
                ],
                "summary": "Request a password reset.",
                "description": "Request a password reset token for an administrator account.",
                "operationId": "7725789cb52ab5de77489011d4c43928",
                "requestBody": {
                    "description": "Administrator email",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Password reset token generated"
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/password-reset/validate": {
            "post": {
                "tags": [
                    "password-reset"
                ],
                "summary": "Validate a password reset token.",
                "description": "Validate a password reset token.",
                "operationId": "336b157137fc4c4bd95714810f934ef8",
                "requestBody": {
                    "description": "Password reset token",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "a1b2c3d4e5f6"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "valid": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/password-reset/reset": {
            "post": {
                "tags": [
                    "password-reset"
                ],
                "summary": "Reset password with token.",
                "description": "Reset an administrator password using a token.",
                "operationId": "19b7cbd6a10c9636a579b35028d1b1fc",
                "requestBody": {
                    "description": "Password reset information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "newPassword"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "a1b2c3d4e5f6"
                                    },
                                    "newPassword": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newSecurePassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/sessions": {
            "post": {
                "tags": [
                    "sessions"
                ],
                "summary": "Log in or create new session.",
                "description": "âœ… **Status: Stable** â€“ This method is stable and safe for production use. Given valid login data, this will generate a login token that will be valid for 1 hour.",
                "operationId": "8ecb80a8846ff88c2cc875960f7268c1",
                "requestBody": {
                    "description": "Pass session credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "login_name",
                                    "password"
                                ],
                                "properties": {
                                    "login_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "eetIc/Gropvoc1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1234
                                        },
                                        "key": {
                                            "type": "string",
                                            "example": "2cfe100561473c6cdd99c9e2f26fa974"
                                        },
                                        "expiry": {
                                            "type": "string",
                                            "example": "2017-07-20T18:22:48+00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/sessions/{sessionId}": {
            "delete": {
                "tags": [
                    "sessions"
                ],
                "summary": "Delete a session.",
                "description": "âœ… **Status: Stable** â€“ This method is stable and safe for production use. Delete the session passed as a parameter.",
                "operationId": "a6b4f29398d881badfa190dd11326fc9",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "Session id (not key as for authentication) obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/campaigns": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Gets a list of all campaigns.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all campaigns/messages.",
                "operationId": "ea24d861841d2dbccb639a4d2918aebc",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Message"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Create a message for campaign.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns created message.",
                "operationId": "4509477a54e9a738a3ff9ad71f8a7b00",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Create a new message.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content",
                                    "format",
                                    "metadata",
                                    "schedule",
                                    "options"
                                ],
                                "properties": {
                                    "template_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "content": {
                                        "$ref": "#/components/schemas/MessageContentRequest"
                                    },
                                    "format": {
                                        "$ref": "#/components/schemas/MessageFormatRequest"
                                    },
                                    "metadata": {
                                        "$ref": "#/components/schemas/MessageMetadataRequest"
                                    },
                                    "schedule": {
                                        "$ref": "#/components/schemas/MessageScheduleRequest"
                                    },
                                    "options": {
                                        "$ref": "#/components/schemas/MessageOptionsRequest"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/campaigns/{messageId}": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Gets a campaign by id.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns campaign/message by id.",
                "operationId": "f1c98ff78ce3d1ce528257de4ce3da07",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "message ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Update campaign by id.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Updates campaign/message by id.",
                "operationId": "442ec1af3bc897d7b2daf7d0013ea367",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "message ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update message.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content",
                                    "format",
                                    "schedule",
                                    "options"
                                ],
                                "properties": {
                                    "template_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "content": {
                                        "$ref": "#/components/schemas/MessageContentRequest"
                                    },
                                    "format": {
                                        "$ref": "#/components/schemas/MessageFormatRequest"
                                    },
                                    "schedule": {
                                        "$ref": "#/components/schemas/MessageScheduleRequest"
                                    },
                                    "options": {
                                        "$ref": "#/components/schemas/MessageOptionsRequest"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Delete campaign by id.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Delete campaign/message by id.",
                "operationId": "f13a1efd58d8cfb8bc67807adcec2d8e",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "message ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/campaigns/{messageId}/send": {
            "post": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Processes/sends campaign/message by id.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Processes/sends campaign/message by id.",
                "operationId": "98fb211884bfcd9bf9206cd4d683532f",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "message ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/list-messages/message/{messageId}/lists": {
            "get": {
                "tags": [
                    "list-messages"
                ],
                "summary": "Returns a list of subscriber lists associated with a message.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production.",
                "operationId": "13859632a920ab15c277632e3a389f91",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "Message ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubscriberList"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "list-messages"
                ],
                "summary": "Removes all list associations for a message.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production.",
                "operationId": "8ac8602531b6160bfdde282f8f2c4834",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "Message ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success, no content"
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/list-messages/list/{listId}/messages": {
            "get": {
                "tags": [
                    "list-messages"
                ],
                "summary": "Returns a list of message IDs associated with a subscriber list.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production.",
                "operationId": "9e91d7505c692a51336a4b85fa846a74",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "Subscriber List ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Message"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subscriber list not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/list-messages/message/{messageId}/list/{listId}": {
            "post": {
                "tags": [
                    "list-messages"
                ],
                "summary": "Associates a message with a subscriber list.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production.",
                "operationId": "3648ea88a78c86a041538105202d1702",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "Message ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "Subscriber List ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message or subscriber list not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "list-messages"
                ],
                "summary": "Disassociates a message from a subscriber list.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production.",
                "operationId": "00b8276ae19641062b5bbba1ef8aa247",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "Message ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "Subscriber List ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success, no content"
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message or subscriber list not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/list-messages/message/{messageId}/list/{listId}/check": {
            "get": {
                "tags": [
                    "list-messages"
                ],
                "summary": "Checks if a message is associated with a subscriber list.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production.",
                "operationId": "c98f2361f7c4b2270c1046570d2d491e",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "Message ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "Subscriber List ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "is_associated": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message or subscriber list not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/templates": {
            "get": {
                "tags": [
                    "templates"
                ],
                "summary": "Gets a list of all templates.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all templates.",
                "operationId": "087039999e07f0b831aca77cb1f8bb1c",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Template"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "templates"
                ],
                "summary": "Create a new template.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON response of created template.",
                "operationId": "1b4a0dd67dd9c65cd62ca500b7837a1d",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass session credentials",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Newsletter Template"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "<html><body>[CONTENT]</body></html>"
                                    },
                                    "text": {
                                        "type": "string",
                                        "example": "[CONTENT]"
                                    },
                                    "file": {
                                        "description": "Optional file upload for HTML content",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "check_links": {
                                        "description": "Check that all links have full URLs",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "check_images": {
                                        "description": "Check that all images have full URLs",
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "check_external_images": {
                                        "description": "Check that all external images exist",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Template"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/templates/{templateId}": {
            "get": {
                "tags": [
                    "templates"
                ],
                "summary": "Gets a templateI by id.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns template by id.",
                "operationId": "399ceead91ad931b306c585e3728027a",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "template ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Template"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "templates"
                ],
                "summary": "Deletes a template.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Deletes template by id.",
                "operationId": "fde16eb99758ec7a4deb05a597c25178",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "Template ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/analytics/campaigns": {
            "get": {
                "tags": [
                    "analytics"
                ],
                "summary": "Gets campaign statistics.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns statistics overview for campaigns.",
                "operationId": "8a10d30d0e428611a077196e18382f1e",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of campaigns to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last seen campaign ID for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CampaignStatistics"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/analytics/view-opens": {
            "get": {
                "tags": [
                    "analytics"
                ],
                "summary": "Gets view opens statistics.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns statistics for view opens.",
                "operationId": "37095a7af610f1e0927dd04f772295db",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of campaigns to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last seen campaign ID for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ViewOpensStatistics"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/analytics/domains/top": {
            "get": {
                "tags": [
                    "analytics"
                ],
                "summary": "Gets top domains statistics.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns statistics for the top domains with more than 5 subscribers.",
                "operationId": "089df16cf97551967e12b2f3207f2cb3",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of domains to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "min_subscribers",
                        "in": "query",
                        "description": "Minimum number of subscribers per domain",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 5,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TopDomainStats"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/analytics/domains/confirmation": {
            "get": {
                "tags": [
                    "analytics"
                ],
                "summary": "Gets domain confirmation statistics.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns statistics for domains showing confirmation status.",
                "operationId": "8843c53978f1c83a02802678a5af54cd",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of domains to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 50,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DetailedDomainStats"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/analytics/local-parts/top": {
            "get": {
                "tags": [
                    "analytics"
                ],
                "summary": "Gets top local-parts statistics.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns statistics for the top local-parts of email addresses.",
                "operationId": "d9a575680a590b572c4607909b3cbfb0",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of local-parts to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocalPartsStats"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/lists/{listId}/subscribers": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "Gets a list of all subscribers of a subscriber list.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all subscribers for a subscriber list.",
                "operationId": "a02c94c74a195fd2ad0443d9c32547d8",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Subscriber"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "Create subscription",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Subscribe subscriber to a list.",
                "operationId": "2339631c4103a324c9938c05d00c7e31",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass session credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "emails"
                                ],
                                "properties": {
                                    "emails": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "email"
                                        },
                                        "example": [
                                            "test1@example.com",
                                            "test2@example.com"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Subscription"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlreadyExistsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "Delete subscription",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Delete subscription.",
                "operationId": "3077470b8b4830d18ff3c14f51a5b06d",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "emails",
                        "in": "query",
                        "description": "emails of subscribers to delete from list.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/lists/{listId}/count": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "Gets the total number of subscribers of a list",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a count of all subscribers in a given list.",
                "operationId": "8be6d0b47d8fd6570b56c7cb3861e2ec",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "subscribers_count": {
                                            "type": "integer",
                                            "example": 42
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/subscribers/attributes": {
            "get": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Gets a list of all subscriber attribute definitions.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all subscriber attribute definitions.",
                "operationId": "6967a987ff39ddf03f3406bc68474f7a",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AttributeDefinition"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Create a subscriber attribute definition.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns created subscriber attribute definition.",
                "operationId": "c11d004e79a0ae1798e990ed9e5e3f10",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass parameters to create subscriber attribute.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSubscriberAttributeDefinitionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttributeDefinition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/subscribers/attributes/{definitionId}": {
            "get": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Gets attribute with specified ID.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a single attribute with specified ID.",
                "operationId": "8c95f96db7876dc0db83c732f1ced535",
                "parameters": [
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "Definition ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttributeDefinition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There is no attribute with that ID."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Update a subscriber attribute definition.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns updated subscriber attribute definition.",
                "operationId": "a8db4bbd9d8fe18de78c0703f3260fe4",
                "parameters": [
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "Definition ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass parameters to update subscriber attribute.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSubscriberAttributeDefinitionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttributeDefinition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Deletes an attribute definition.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Deletes a single subscriber attribute definition.",
                "operationId": "3712009921a5b4e3807b4e1b36865637",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "Definition ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/subscribers/attribute-values/{subscriberId}/{definitionId}": {
            "get": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Gets subscriber attribute.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a single attribute.",
                "operationId": "8cec584aaa9a9a3bdc067a6f203d4b1b",
                "parameters": [
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "attribute definition id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "subscriberId",
                        "in": "path",
                        "description": "Subscriber id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriberAttributeValue"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There is no attribute with that ID."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Create/update a subscriber attribute.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns created/updated subscriber attribute.",
                "operationId": "773db5461cc45db4ba539abf95ad918b",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "attribute definition id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "subscriberId",
                        "in": "path",
                        "description": "Subscriber id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass parameters to create subscriber attribute.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "example": "United States"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriberAttributeValue"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Deletes an attribute.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Deletes a single subscriber attribute.",
                "operationId": "7b68b308e95cad1dd0e73359cc644c52",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "attribute definition id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "subscriberId",
                        "in": "path",
                        "description": "Subscriber id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/subscribers/attribute-values/{subscriberId}": {
            "get": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Gets a list of all subscriber attributes.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all subscriber attributes.",
                "operationId": "0d06d25df0fa17dcbe377a32f228c796",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriberId",
                        "in": "path",
                        "description": "Subscriber id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubscriberAttributeValue"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/subscribers": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Create a subscriber",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Creates a new subscriber (if there is no subscriber with the given email address yet).",
                "operationId": "d3087676ec410e79550544985ec75409",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass session credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSubscriberRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscriber"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlreadyExistsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/subscribers/{subscriberId}": {
            "get": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Get a subscriber",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Get subscriber data by id.",
                "operationId": "130382f8a765154049824c4bb4b7136f",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriberId",
                        "in": "path",
                        "description": "Subscriber ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscriber"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Update subscriber",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Update subscriber data by id.",
                "operationId": "c7fd02049f53535110b7329281aefa6e",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriberId",
                        "in": "path",
                        "description": "Subscriber ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass session credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSubscriberRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscriber"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Delete subscriber",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Delete subscriber by id.",
                "operationId": "719f3e26178ac8c7d65bcf2ff9d1d35f",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriberId",
                        "in": "path",
                        "description": "Subscriber ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/subscribers/{subscriberId}/history": {
            "get": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Get subscriber event history",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. ",
                "operationId": "15830d2425a969a7482eefb114234d47",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriberId",
                        "in": "path",
                        "description": "Subscriber ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Page number (pagination)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Max items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25
                        }
                    },
                    {
                        "name": "ip",
                        "in": "query",
                        "description": "Filter by IP address",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter by date (format: Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "summery",
                        "in": "query",
                        "description": "Filter by summary text",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of subscriber events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubscriberHistory"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/subscribers/confirm": {
            "get": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Confirm a subscriber by uniqueId.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production.",
                "operationId": "1e4d7709f3d02f54a4fe6a183b253140",
                "parameters": [
                    {
                        "name": "uniqueId",
                        "in": "query",
                        "description": "Unique identifier for the subscriber confirmation",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "e9d8c9b2e6"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscriber confirmed",
                        "content": {
                            "text/html": {}
                        }
                    },
                    "400": {
                        "description": "Missing or invalid uniqueId"
                    },
                    "404": {
                        "description": "Subscriber not found"
                    }
                }
            }
        },
        "/api/v2/subscribers/export": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Export subscribers",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Export subscribers to CSV file.",
                "operationId": "d8ec2cc2a42ae9cb888e38d504a1cab6",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Filter parameters for subscribers to export. ",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExportSubscriberRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/subscribers/import": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Import subscribers",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Import subscribers from CSV file.",
                "operationId": "7cd5d687b3cbe0fd9825996e1d105bcc",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "CSV file with subscribers data",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "list_id": {
                                        "description": "List id to add imported subscribers to",
                                        "type": "string",
                                        "default": null,
                                        "pattern": "^\\d+$"
                                    },
                                    "update_existing": {
                                        "description": "Weather to update existing subscribers or not",
                                        "type": "string",
                                        "default": "0",
                                        "enum": [
                                            "0",
                                            "1"
                                        ]
                                    },
                                    "skip_invalid_emails": {
                                        "description": "Weather to skip invalid email or add with invalid_ prefix"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "imported": {
                                            "type": "integer"
                                        },
                                        "skipped": {
                                            "type": "integer"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/lists": {
            "get": {
                "tags": [
                    "lists"
                ],
                "summary": "Gets a list of all subscriber lists.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all subscriber lists.",
                "operationId": "ed0ed404ef48002705009cd8777e6b71",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubscriberList"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "lists"
                ],
                "summary": "Create a subscriber list.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns created list.",
                "operationId": "24609c8dc07b9c58de81b290481884de",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass parameters to create a new subscriber list.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSubscriberListRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriberList"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/lists/{listId}": {
            "get": {
                "tags": [
                    "lists"
                ],
                "summary": "Gets a subscriber list.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a single subscriber list with specified ID.",
                "operationId": "6e5f5ac3587ae710a87000c0537b0da4",
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriberList"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There is no list with that ID."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "lists"
                ],
                "summary": "Deletes a list.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Deletes a single subscriber list.",
                "operationId": "0d1c8c4721c26084c53b90e365a57a27",
                "parameters": [
                    {
                        "name": "php-auth-pw",
                        "in": "header",
                        "description": "Session key obtained from login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UnauthorizedResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "No valid session key was provided as basic auth password."
                    }
                },
                "type": "object"
            },
            "ValidationErrorResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Some fields are invalid"
                    }
                },
                "type": "object"
            },
            "BadRequestResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Invalid json format"
                    }
                },
                "type": "object"
            },
            "AlreadyExistsResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "This resource already exists."
                    }
                },
                "type": "object"
            },
            "NotFoundErrorResponse": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "There is no entity with that ID."
                    }
                },
                "type": "object"
            },
            "CursorPagination": {
                "properties": {
                    "total": {
                        "type": "integer",
                        "example": 100
                    },
                    "limit": {
                        "type": "integer",
                        "example": 25
                    },
                    "has_more": {
                        "type": "boolean",
                        "example": true
                    },
                    "next_cursor": {
                        "type": "integer",
                        "example": 129
                    }
                },
                "type": "object"
            },
            "CreateAdministratorRequest": {
                "required": [
                    "login_name",
                    "password",
                    "email",
                    "super_user"
                ],
                "properties": {
                    "login_name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 3,
                        "example": "admin"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "maxLength": 255,
                        "minLength": 6,
                        "example": "StrongP@ssw0rd"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "admin@example.com"
                    },
                    "super_user": {
                        "type": "boolean",
                        "example": false
                    },
                    "privileges": {
                        "description": "Array of privileges where keys are privilege names and values are booleans",
                        "properties": {
                            "subscribers": {
                                "type": "boolean",
                                "example": true
                            },
                            "campaigns": {
                                "type": "boolean",
                                "example": false
                            },
                            "statistics": {
                                "type": "boolean",
                                "example": true
                            },
                            "settings": {
                                "type": "boolean",
                                "example": false
                            }
                        },
                        "type": "object",
                        "example": {
                            "subscribers": true,
                            "campaigns": false,
                            "statistics": true,
                            "settings": false
                        }
                    }
                },
                "type": "object"
            },
            "UpdateAdministratorRequest": {
                "properties": {
                    "login_name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 3,
                        "example": "admin"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "maxLength": 255,
                        "minLength": 6,
                        "example": "StrongP@ssw0rd"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "admin@example.com"
                    },
                    "super_user": {
                        "type": "boolean",
                        "example": false
                    },
                    "privileges": {
                        "description": "Array of privileges where keys are privilege names and values are booleans",
                        "properties": {
                            "subscribers": {
                                "type": "boolean",
                                "example": true
                            },
                            "campaigns": {
                                "type": "boolean",
                                "example": false
                            },
                            "statistics": {
                                "type": "boolean",
                                "example": true
                            },
                            "settings": {
                                "type": "boolean",
                                "example": false
                            }
                        },
                        "type": "object",
                        "example": {
                            "subscribers": true,
                            "campaigns": false,
                            "statistics": true,
                            "settings": false
                        }
                    }
                },
                "type": "object"
            },
            "CreateAdminAttributeDefinitionRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "string",
                        "example": "Country"
                    },
                    "type": {
                        "type": "string",
                        "example": "checkbox"
                    },
                    "order": {
                        "type": "number",
                        "example": 12
                    },
                    "default_value": {
                        "type": "string",
                        "example": "United States"
                    },
                    "required": {
                        "type": "boolean",
                        "example": true
                    },
                    "table_name": {
                        "type": "string",
                        "example": "list_attributes"
                    }
                },
                "type": "object"
            },
            "Administrator": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "login_name": {
                        "type": "string",
                        "example": "admin"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "admin@example.com"
                    },
                    "super_user": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-29T12:34:56+00:00"
                    }
                },
                "type": "object"
            },
            "AdminAttributeDefinition": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Country"
                    },
                    "type": {
                        "type": "string",
                        "example": "select"
                    },
                    "list_order": {
                        "type": "integer",
                        "example": 12
                    },
                    "default_value": {
                        "type": "string",
                        "example": "United States"
                    },
                    "required": {
                        "type": "boolean",
                        "example": true
                    },
                    "table_name": {
                        "type": "string",
                        "example": "ukcounties"
                    }
                },
                "type": "object"
            },
            "AdminAttributeValue": {
                "properties": {
                    "administrator": {
                        "$ref": "#/components/schemas/Administrator"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/AttributeDefinition"
                    },
                    "value": {
                        "type": "string",
                        "example": "United States"
                    }
                },
                "type": "object"
            },
            "MessageContentRequest": {
                "required": [
                    "subject",
                    "text",
                    "text_message",
                    "footer"
                ],
                "properties": {
                    "subject": {
                        "type": "string",
                        "example": "Campaign Subject"
                    },
                    "text": {
                        "type": "string",
                        "example": "Full text content"
                    },
                    "text_message": {
                        "type": "string",
                        "example": "Short text message"
                    },
                    "footer": {
                        "type": "string",
                        "example": "Unsubscribe link here"
                    }
                },
                "type": "object"
            },
            "MessageFormatRequest": {
                "required": [
                    "html_formated",
                    "send_format",
                    "format_options"
                ],
                "properties": {
                    "html_formated": {
                        "type": "boolean",
                        "example": true
                    },
                    "send_format": {
                        "type": "string",
                        "enum": [
                            "html",
                            "text",
                            "invite"
                        ],
                        "example": "html"
                    },
                    "format_options": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "text",
                                "html",
                                "pdf"
                            ]
                        },
                        "example": [
                            "html"
                        ]
                    }
                },
                "type": "object"
            },
            "MessageMetadataRequest": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "draft"
                    }
                },
                "type": "object"
            },
            "MessageScheduleRequest": {
                "required": [
                    "embargo"
                ],
                "properties": {
                    "embargo": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-17 09:00:00"
                    },
                    "repeat_interval": {
                        "type": "string",
                        "example": "24 hours"
                    },
                    "repeat_until": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-30T00:00:00+04:00"
                    },
                    "requeue_interval": {
                        "type": "string",
                        "example": "12 hours"
                    },
                    "requeue_until": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-20T00:00:00+04:00"
                    }
                },
                "type": "object"
            },
            "MessageOptionsRequest": {
                "required": [
                    "from_field"
                ],
                "properties": {
                    "from_field": {
                        "type": "string",
                        "example": "info@example.com"
                    },
                    "to_field": {
                        "type": "string",
                        "example": "subscriber@example.com"
                    },
                    "reply_to": {
                        "type": "string",
                        "example": "reply@example.com"
                    },
                    "user_selection": {
                        "type": "string",
                        "example": "all-active-users"
                    }
                },
                "type": "object"
            },
            "TemplateImage": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 12
                    },
                    "template_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "mimetype": {
                        "type": "string",
                        "example": "image/png",
                        "nullable": true
                    },
                    "filename": {
                        "type": "string",
                        "example": "header.png",
                        "nullable": true
                    },
                    "data": {
                        "description": "Base64-encoded image data",
                        "type": "string",
                        "format": "byte",
                        "example": "iVBORw0KGgoAAAANSUhEUgAAA...",
                        "nullable": true
                    },
                    "width": {
                        "type": "integer",
                        "example": 600,
                        "nullable": true
                    },
                    "height": {
                        "type": "integer",
                        "example": 200,
                        "nullable": true
                    }
                },
                "type": "object",
                "nullable": true
            },
            "Template": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Newsletter"
                    },
                    "content": {
                        "type": "string",
                        "example": "Hello World!",
                        "nullable": true
                    },
                    "text": {
                        "type": "string",
                        "nullable": true
                    },
                    "order": {
                        "type": "integer",
                        "nullable": true
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TemplateImage"
                        },
                        "nullable": true
                    }
                },
                "type": "object",
                "nullable": true
            },
            "Message": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "unique_id": {
                        "type": "string",
                        "example": "2df6b147-8470-45ed-8e4e-86aa01af400d"
                    },
                    "template": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Template"
                            }
                        ],
                        "nullable": true
                    },
                    "message_content": {
                        "properties": {
                            "subject": {
                                "type": "string",
                                "example": "Newsletter"
                            },
                            "text": {
                                "type": "string",
                                "example": "Hello World!"
                            },
                            "text_message": {
                                "type": "string"
                            },
                            "footer": {
                                "type": "string",
                                "example": "This is a footer"
                            }
                        },
                        "type": "object"
                    },
                    "message_format": {
                        "properties": {
                            "html_formated": {
                                "type": "boolean"
                            },
                            "send_format": {
                                "type": "string",
                                "example": "text",
                                "nullable": true
                            },
                            "format_options": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "example": [
                                    "as_html",
                                    "as_text"
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "message_metadata": {
                        "properties": {
                            "status": {
                                "type": "string",
                                "example": "sent"
                            },
                            "processed": {
                                "type": "boolean",
                                "example": true
                            },
                            "views": {
                                "type": "integer",
                                "example": 12
                            },
                            "bounce_count": {
                                "type": "integer"
                            },
                            "entered": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "sent": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "message_schedule": {
                        "properties": {
                            "repeat_interval": {
                                "type": "string",
                                "nullable": true
                            },
                            "repeat_until": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "requeue_interval": {
                                "type": "string",
                                "nullable": true
                            },
                            "requeue_until": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "embargo": {
                                "type": "string",
                                "example": "2023-01-01T12:00:00Z",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "message_options": {
                        "properties": {
                            "from_field": {
                                "type": "string",
                                "example": " My Name <my@email.com>",
                                "nullable": true
                            },
                            "to_field": {
                                "type": "string",
                                "example": "",
                                "nullable": true
                            },
                            "reply_to": {
                                "type": "string",
                                "nullable": true
                            },
                            "user_selection": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CampaignStatistics": {
                "properties": {
                    "campaign_id": {
                        "type": "integer"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "date_sent": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "sent": {
                        "type": "integer"
                    },
                    "bounces": {
                        "type": "integer"
                    },
                    "forwards": {
                        "type": "integer"
                    },
                    "unique_views": {
                        "type": "integer"
                    },
                    "total_clicks": {
                        "type": "integer"
                    },
                    "unique_clicks": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "nullable": true
            },
            "ViewOpensStatistics": {
                "properties": {
                    "campaign_id": {
                        "type": "integer"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "sent": {
                        "type": "integer"
                    },
                    "unique_views": {
                        "type": "integer"
                    },
                    "rate": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object",
                "nullable": true
            },
            "TopDomainStats": {
                "properties": {
                    "domains": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "domain": {
                                    "type": "string"
                                },
                                "subscribers": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "nullable": true
            },
            "DetailedDomainStats": {
                "properties": {
                    "domains": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "domain": {
                                    "type": "string"
                                },
                                "confirmed": {
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "percentage": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    },
                                    "type": "object"
                                },
                                "unconfirmed": {
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "percentage": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    },
                                    "type": "object"
                                },
                                "blacklisted": {
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "percentage": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    },
                                    "type": "object"
                                },
                                "total": {
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "percentage": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "nullable": true
            },
            "LocalPartsStats": {
                "properties": {
                    "local_parts": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "local_part": {
                                    "type": "string"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "percentage": {
                                    "type": "number",
                                    "format": "float"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "nullable": true
            },
            "CreateSubscriberListRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "string",
                        "example": "News"
                    },
                    "description": {
                        "type": "string",
                        "example": "News (and some fun stuff)"
                    },
                    "list_position": {
                        "type": "number",
                        "example": 12
                    },
                    "public": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "CreateSubscriberAttributeDefinitionRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "string",
                        "example": "Country"
                    },
                    "type": {
                        "type": "string",
                        "example": "checkbox"
                    },
                    "order": {
                        "type": "number",
                        "example": 12
                    },
                    "default_value": {
                        "type": "string",
                        "example": "United States"
                    },
                    "required": {
                        "type": "boolean",
                        "example": true
                    },
                    "table_name": {
                        "type": "string",
                        "example": "list_attributes"
                    }
                },
                "type": "object"
            },
            "CreateSubscriberRequest": {
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "string",
                        "example": "admin@example.com"
                    },
                    "request_confirmation": {
                        "type": "boolean",
                        "example": false
                    },
                    "html_email": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "UpdateSubscriberRequest": {
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "string",
                        "example": "admin@example.com"
                    },
                    "confirmed": {
                        "type": "boolean",
                        "example": false
                    },
                    "blacklisted": {
                        "type": "boolean",
                        "example": false
                    },
                    "html_email": {
                        "type": "boolean",
                        "example": false
                    },
                    "disabled": {
                        "type": "boolean",
                        "example": false
                    },
                    "additional_data": {
                        "type": "string",
                        "example": "asdf"
                    }
                },
                "type": "object"
            },
            "ExportSubscriberRequest": {
                "properties": {
                    "date_type": {
                        "description": "What date needs to be used for filtering (any, signup, changed, changelog, subscribed)",
                        "default": "any",
                        "enum": [
                            "any",
                            "signup",
                            "changed",
                            "changelog",
                            "subscribed"
                        ]
                    },
                    "list_id": {
                        "description": "List ID from where to export",
                        "type": "integer"
                    },
                    "date_from": {
                        "description": "Start date for filtering (format: Y-m-d)",
                        "type": "string",
                        "format": "date"
                    },
                    "date_to": {
                        "description": "End date for filtering (format: Y-m-d)",
                        "type": "string",
                        "format": "date"
                    },
                    "columns": {
                        "description": "Columns to include in the export",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": [
                            "id",
                            "email",
                            "confirmed",
                            "blacklisted",
                            "bounceCount",
                            "createdAt",
                            "updatedAt",
                            "uniqueId",
                            "htmlEmail",
                            "disabled",
                            "extraData"
                        ]
                    }
                },
                "type": "object"
            },
            "SubscriberList": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 2
                    },
                    "name": {
                        "type": "string",
                        "example": "Newsletter"
                    },
                    "description": {
                        "type": "string",
                        "example": "Monthly updates"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-01T10:00:00Z"
                    },
                    "list_position": {
                        "type": "integer",
                        "example": 1
                    },
                    "subject_prefix": {
                        "type": "string",
                        "example": "Newsletter: "
                    },
                    "public": {
                        "type": "boolean",
                        "example": true
                    },
                    "category": {
                        "type": "string",
                        "example": "News"
                    }
                },
                "type": "object"
            },
            "Subscriber": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "email": {
                        "type": "string",
                        "example": "subscriber@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "confirmed": {
                        "type": "boolean",
                        "example": true
                    },
                    "blacklisted": {
                        "type": "boolean",
                        "example": false
                    },
                    "bounce_count": {
                        "type": "integer",
                        "example": 0
                    },
                    "unique_id": {
                        "type": "string",
                        "example": "69f4e92cf50eafca9627f35704f030f4"
                    },
                    "html_email": {
                        "type": "boolean",
                        "example": true
                    },
                    "disabled": {
                        "type": "boolean",
                        "example": false
                    },
                    "subscribed_lists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubscriberList"
                        }
                    }
                },
                "type": "object"
            },
            "SubscriberOnly": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "email": {
                        "type": "string",
                        "example": "subscriber@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "confirmed": {
                        "type": "boolean",
                        "example": true
                    },
                    "blacklisted": {
                        "type": "boolean",
                        "example": false
                    },
                    "bounce_count": {
                        "type": "integer",
                        "example": 0
                    },
                    "unique_id": {
                        "type": "string",
                        "example": "69f4e92cf50eafca9627f35704f030f4"
                    },
                    "html_email": {
                        "type": "boolean",
                        "example": true
                    },
                    "disabled": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "Subscription": {
                "properties": {
                    "subscriber": {
                        "$ref": "#/components/schemas/SubscriberOnly"
                    },
                    "subscriber_list": {
                        "$ref": "#/components/schemas/SubscriberList"
                    },
                    "subscription_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "AttributeDefinition": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Country"
                    },
                    "type": {
                        "type": "string",
                        "example": "checkbox"
                    },
                    "list_order": {
                        "type": "integer",
                        "example": 12
                    },
                    "default_value": {
                        "type": "string",
                        "example": "United States"
                    },
                    "required": {
                        "type": "boolean",
                        "example": true
                    },
                    "table_name": {
                        "type": "string",
                        "example": "list_attributes"
                    }
                },
                "type": "object"
            },
            "SubscriberAttributeValue": {
                "properties": {
                    "subscriber": {
                        "$ref": "#/components/schemas/Subscriber"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/AttributeDefinition"
                    },
                    "value": {
                        "type": "string",
                        "example": "United States"
                    }
                },
                "type": "object"
            },
            "SubscriberHistory": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "ip": {
                        "type": "string",
                        "example": "127.0.0.1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-01T10:00:00Z"
                    },
                    "summery": {
                        "type": "string",
                        "example": "Added by admin"
                    },
                    "detail": {
                        "type": "string",
                        "example": "Added with add-email on test"
                    },
                    "system_info": {
                        "type": "string",
                        "example": "HTTP_USER_AGENT = Mozilla/5.0"
                    }
                },
                "type": "object"
            },
            "ListMessage": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "message": {
                        "$ref": "#/components/schemas/Message"
                    },
                    "subscriber_list": {
                        "$ref": "#/components/schemas/SubscriberList"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-01T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-01T10:00:00Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "admin-attributes",
            "description": "admin-attributes"
        },
        {
            "name": "administrators",
            "description": "administrators"
        },
        {
            "name": "password-reset",
            "description": "password-reset"
        },
        {
            "name": "sessions",
            "description": "sessions"
        },
        {
            "name": "campaigns",
            "description": "campaigns"
        },
        {
            "name": "list-messages",
            "description": "list-messages"
        },
        {
            "name": "templates",
            "description": "templates"
        },
        {
            "name": "analytics",
            "description": "analytics"
        },
        {
            "name": "subscriptions",
            "description": "subscriptions"
        },
        {
            "name": "subscriber-attributes",
            "description": "subscriber-attributes"
        },
        {
            "name": "subscribers",
            "description": "subscribers"
        },
        {
            "name": "lists",
            "description": "lists"
        }
    ]
}