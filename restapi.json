{
    "openapi": "3.0.0",
    "info": {
        "title": "phpList API Documentation",
        "description": "This is the OpenAPI documentation for phpList API.",
        "contact": {
            "email": "support@phplist.com"
        },
        "license": {
            "name": "AGPL-3.0-or-later",
            "url": "https://www.gnu.org/licenses/agpl.txt"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://www.phplist.com/api/v2",
            "description": "Production server"
        }
    ],
    "paths": {
        "/administrators/attributes": {
            "get": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Gets a list of all admin attribute definitions.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all admin attribute definitions.",
                "operationId": "ce05a304cefca567e1b71cb5c3630d01",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdminAttributeDefinition"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Create an admin attribute definition.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns created admin attribute definition.",
                "operationId": "14a003143c65cefbd57f802f10784f01",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass parameters to create admin attribute.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAdminAttributeDefinitionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminAttributeDefinition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/administrators/attributes/{definitionId}": {
            "get": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Gets attribute with specified ID.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a single attribute with specified ID.",
                "operationId": "f7e1e8f7e3f619a7669df05e0aa03c43",
                "parameters": [
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "Definition ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminAttributeDefinition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There is no attribute with that ID."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Update an admin attribute definition.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns updated admin attribute definition.",
                "operationId": "030d2e1a213e49728578ed7f7ac4efce",
                "parameters": [
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "Definition ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass parameters to update admin attribute.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAdminAttributeDefinitionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminAttributeDefinition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Deletes an attribute definition.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Deletes a single admin attribute definition.",
                "operationId": "3b0ae1565f53e2ab66e85f1c85af6d79",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "Definition ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/administrators/attribute-values/{adminId}/{definitionId}": {
            "get": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Gets admin attribute.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a single attribute.",
                "operationId": "9b1cd3329996564658bc9e7bb8ce2037",
                "parameters": [
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "attribute definition id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "adminId",
                        "in": "path",
                        "description": "Administrator id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminAttributeValue"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There is no attribute with that ID."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Create/update an admin attribute.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns created/updated admin attribute.",
                "operationId": "b64487183e6dd99e2551ced2bb247ac0",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "attribute definition id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "adminId",
                        "in": "path",
                        "description": "Administrator id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass parameters to create admin attribute.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "example": "United States"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminAttributeValue"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Deletes an attribute.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Deletes a single admin attribute.",
                "operationId": "ab0043027b725b3f88e4db233998821b",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "attribute definition id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "adminId",
                        "in": "path",
                        "description": "Administrator id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/administrators/attribute-values/{adminId}": {
            "get": {
                "tags": [
                    "admin-attributes"
                ],
                "summary": "Gets a list of all admin attributes.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all admin attributes.",
                "operationId": "b1080b6b7b1ea3be2735259ec8bfe129",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "adminId",
                        "in": "path",
                        "description": "Administrator id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdminAttributeValue"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/administrators": {
            "get": {
                "tags": [
                    "administrators"
                ],
                "summary": "Get Administrators",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Get list of administrators.",
                "operationId": "54f61503fba250e8d628c449b60c3e1d",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Administrator"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            },
            "post": {
                "tags": [
                    "administrators"
                ],
                "summary": "Create Administrator",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Create a new administrator.",
                "operationId": "e017d565fb2967a2213a239c87abcd1d",
                "requestBody": {
                    "description": "Administrator data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAdministratorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Administrator created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Administrator"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/administrators/{administratorId}": {
            "get": {
                "tags": [
                    "administrators"
                ],
                "summary": "Get Administrator",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Get administrator by ID.",
                "operationId": "62027460360cd09ca3e2d33b7ed76342",
                "parameters": [
                    {
                        "name": "administratorId",
                        "in": "path",
                        "description": "Administrator ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Administrator found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Administrator"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Administrator not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "administrators"
                ],
                "summary": "Update Administrator",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Update an administrator.",
                "operationId": "852501e3d00643ba4eaa380a472fc505",
                "parameters": [
                    {
                        "name": "administratorId",
                        "in": "path",
                        "description": "Administrator ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Administrator update data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAdministratorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Administrator updated successfully"
                    },
                    "404": {
                        "description": "Administrator not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "administrators"
                ],
                "summary": "Delete Administrator",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Delete an administrator.",
                "operationId": "9b86246d3fbaafb766f729d1553d095b",
                "parameters": [
                    {
                        "name": "administratorId",
                        "in": "path",
                        "description": "Administrator ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Administrator deleted successfully"
                    },
                    "404": {
                        "description": "Administrator not found"
                    }
                }
            }
        },
        "/sessions": {
            "post": {
                "tags": [
                    "sessions"
                ],
                "summary": "Log in or create new session.",
                "description": "âœ… **Status: Stable** â€“ This method is stable and safe for production use. Given valid login data, this will generate a login token that will be valid for 1 hour.",
                "operationId": "7b35956b20a6f1ec88f404d597e7b397",
                "requestBody": {
                    "description": "Pass session credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "login_name",
                                    "password"
                                ],
                                "properties": {
                                    "login_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "eetIc/Gropvoc1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1234
                                        },
                                        "key": {
                                            "type": "string",
                                            "example": "2cfe100561473c6cdd99c9e2f26fa974"
                                        },
                                        "expiry": {
                                            "type": "string",
                                            "example": "2017-07-20T18:22:48+00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sessions/{sessionId}": {
            "delete": {
                "tags": [
                    "sessions"
                ],
                "summary": "Delete a session.",
                "description": "âœ… **Status: Stable** â€“ This method is stable and safe for production use. Delete the session passed as a parameter.",
                "operationId": "9d87dc3d373a03a84233dba79ee6c6b0",
                "parameters": [
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "Session ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/campaigns": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Gets a list of all campaigns.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all campaigns/messages.",
                "operationId": "bfd1698376e410375f2a75e8f80196dd",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Message"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Create a message for campaign.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns created message.",
                "operationId": "f92d0fb311b9881aaa48199579215c64",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Create a new message.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content",
                                    "format",
                                    "metadata",
                                    "schedule",
                                    "options"
                                ],
                                "properties": {
                                    "template_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "content": {
                                        "$ref": "#/components/schemas/MessageContentRequest"
                                    },
                                    "format": {
                                        "$ref": "#/components/schemas/MessageFormatRequest"
                                    },
                                    "metadata": {
                                        "$ref": "#/components/schemas/MessageMetadataRequest"
                                    },
                                    "schedule": {
                                        "$ref": "#/components/schemas/MessageScheduleRequest"
                                    },
                                    "options": {
                                        "$ref": "#/components/schemas/MessageOptionsRequest"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/campaigns/{messageId}": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Gets a campaign by id.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns campaign/message by id.",
                "operationId": "b0723e912c6dd8bab4671b3bd3b10834",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "message ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Update campaign by id.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Updates campaign/message by id.",
                "operationId": "7c9d30a8d09451d97787bd156e36d763",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "message ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update message.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content",
                                    "format",
                                    "schedule",
                                    "options"
                                ],
                                "properties": {
                                    "template_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "content": {
                                        "$ref": "#/components/schemas/MessageContentRequest"
                                    },
                                    "format": {
                                        "$ref": "#/components/schemas/MessageFormatRequest"
                                    },
                                    "schedule": {
                                        "$ref": "#/components/schemas/MessageScheduleRequest"
                                    },
                                    "options": {
                                        "$ref": "#/components/schemas/MessageOptionsRequest"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Delete campaign by id.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Delete campaign/message by id.",
                "operationId": "23d6499a0511bdd3ba59389ec9a7bdd6",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "message ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/templates": {
            "get": {
                "tags": [
                    "templates"
                ],
                "summary": "Gets a list of all templates.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all templates.",
                "operationId": "cca1a70af95c5b244fd05db5802cc316",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Template"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "templates"
                ],
                "summary": "Create a new template.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON response of created template.",
                "operationId": "c964380aea699a357d0540e3b7aeeb4a",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass session credentials",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Newsletter Template"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "<html><body>[CONTENT]</body></html>"
                                    },
                                    "text": {
                                        "type": "string",
                                        "example": "[CONTENT]"
                                    },
                                    "file": {
                                        "description": "Optional file upload for HTML content",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "check_links": {
                                        "description": "Check that all links have full URLs",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "check_images": {
                                        "description": "Check that all images have full URLs",
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "check_external_images": {
                                        "description": "Check that all external images exist",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Template"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/templates/{templateId}": {
            "get": {
                "tags": [
                    "templates"
                ],
                "summary": "Gets a templateI by id.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns template by id.",
                "operationId": "4f30074c48686c6ff7ee73bb84aff74b",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "template ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Template"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "templates"
                ],
                "summary": "Deletes a template.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Deletes template by id.",
                "operationId": "d2f63db0112011300d6a8d283e1d7765",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "Template ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/lists/{listId}/subscribers": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "Gets a list of all subscribers of a subscriber list.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all subscribers for a subscriber list.",
                "operationId": "affac1e79f220de2be59726168252cfd",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Subscriber"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "Create subscription",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Subscribe subscriber to a list.",
                "operationId": "df24f6b9a89883b6bb906292e52238cf",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass session credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "emails"
                                ],
                                "properties": {
                                    "emails": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "email"
                                        },
                                        "example": [
                                            "test1@example.com",
                                            "test2@example.com"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Subscription"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlreadyExistsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "Delete subscription",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Delete subscription.",
                "operationId": "f9b614f975fdf2438e73427a9b9a4f01",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "emails",
                        "in": "query",
                        "description": "emails of subscribers to delete from list.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/lists/{listId}/count": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "Gets the total number of subscribers of a list",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a count of all subscribers in a given list.",
                "operationId": "cb56d724ec73b7889ab67442fa25b61f",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "subscribers_count": {
                                            "type": "integer",
                                            "example": 42
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscriber/attributes": {
            "get": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Gets a list of all subscriber attribute definitions.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all subscriber attribute definitions.",
                "operationId": "836e10648457b202964a1d053606db7b",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AttributeDefinition"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Create a subscriber attribute definition.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns created subscriber attribute definition.",
                "operationId": "33e0188e476c896f39615d4665259a42",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass parameters to create subscriber attribute.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSubscriberAttributeDefinitionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttributeDefinition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscriber/attributes/{definitionId}": {
            "get": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Gets attribute with specified ID.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a single attribute with specified ID.",
                "operationId": "0dc1a6a0eb728200a1b0e646e65c0192",
                "parameters": [
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "Definition ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttributeDefinition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There is no attribute with that ID."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Update a subscriber attribute definition.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns updated subscriber attribute definition.",
                "operationId": "ee6c617179d82c3fee20be7684bdef01",
                "parameters": [
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "Definition ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass parameters to update subscriber attribute.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSubscriberAttributeDefinitionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttributeDefinition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Deletes an attribute definition.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Deletes a single subscriber attribute definition.",
                "operationId": "357e449612480b2c793d264c9b762ca5",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "Definition ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscriber/attribute-values/{subscriberId}/{definitionId}": {
            "post": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Create/update a subscriber attribute.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns created/updated subscriber attribute.",
                "operationId": "6eaa4d0a145a75d7649c41ec5570d19b",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "attribute definition id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "subscriberId",
                        "in": "path",
                        "description": "Subscriber id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass parameters to create subscriber attribute.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "example": "United States"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriberAttributeValue"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Deletes an attribute.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Deletes a single subscriber attribute.",
                "operationId": "a4cfb41e412cf5edb45654d08bc253b0",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "attribute definition id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "subscriberId",
                        "in": "path",
                        "description": "Subscriber id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscribers/attribute-values/{subscriberId}": {
            "get": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Gets a list of all subscriber attributes.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all subscriber attributes.",
                "operationId": "c56b129a07bb830498a2e2d9fa29c431",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriberId",
                        "in": "path",
                        "description": "Subscriber id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubscriberAttributeValue"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscribers/attribute-values/{subscriberId}/{definitionId}": {
            "get": {
                "tags": [
                    "subscriber-attributes"
                ],
                "summary": "Gets subscriber attribute.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a single attribute.",
                "operationId": "9331775697d9b47dd251648cfb300155",
                "parameters": [
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "attribute definition id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "subscriberId",
                        "in": "path",
                        "description": "Subscriber id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriberAttributeValue"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There is no attribute with that ID."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscribers": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Create a subscriber",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Creates a new subscriber (if there is no subscriber with the given email address yet).",
                "operationId": "a25f07c357e91498114e83ba87b955dd",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass session credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSubscriberRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscriber"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlreadyExistsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscribers/{subscriberId}": {
            "get": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Get a subscriber",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Get subscriber data by id.",
                "operationId": "34cb6face31e89b412fd6ed399e972ca",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriberId",
                        "in": "path",
                        "description": "Subscriber ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscriber"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Update subscriber",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Update subscriber data by id.",
                "operationId": "6515701f114383c7deb227d6f339ebf6",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriberId",
                        "in": "path",
                        "description": "Subscriber ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass session credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSubscriberRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscriber"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Delete subscriber",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Delete subscriber by id.",
                "operationId": "08f2193855c51cc7c4ac57757982c900",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriberId",
                        "in": "path",
                        "description": "Subscriber ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscribers/export": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Export subscribers",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Export subscribers to CSV file.",
                "operationId": "e7c60458efe83e8e5ae96ecb4bf4a5b6",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Filter parameters for subscribers to export. ",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExportSubscriberRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscribers/import": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Import subscribers",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Import subscribers from CSV file.",
                "operationId": "e370006d8ec6b1aa5b7fb65aa604d52b",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "CSV file with subscribers data",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "list_id": {
                                        "description": "List id to add imported subscribers to",
                                        "type": "integer",
                                        "default": null
                                    },
                                    "update_existing": {
                                        "description": "Weather to update existing subscribers or not",
                                        "type": "boolean",
                                        "default": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "imported": {
                                            "type": "integer"
                                        },
                                        "skipped": {
                                            "type": "integer"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/lists": {
            "get": {
                "tags": [
                    "lists"
                ],
                "summary": "Gets a list of all subscriber lists.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a JSON list of all subscriber lists.",
                "operationId": "490f9c3bb23cc6f42aef9b3ec5835365",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after_id",
                        "in": "query",
                        "description": "Last id (starting from 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubscriberList"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/CursorPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "lists"
                ],
                "summary": "Create a subscriber list.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns created list.",
                "operationId": "000b485d89d00b8b311d77fa21c38f2c",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass parameters to create a new subscriber list.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSubscriberListRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriberList"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/lists/{listId}": {
            "get": {
                "tags": [
                    "lists"
                ],
                "summary": "Gets a subscriber list.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Returns a single subscriber list with specified ID.",
                "operationId": "33dcdab5ee71974e2e5c76d2454683d4",
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID obtained from authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriberList"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There is no list with that ID."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "lists"
                ],
                "summary": "Deletes a list.",
                "description": "ðŸš§ **Status: Beta** â€“ This method is under development. Avoid using in production. Deletes a single subscriber list.",
                "operationId": "a1de6ad5288afdea553e596717a1d4a6",
                "parameters": [
                    {
                        "name": "session",
                        "in": "header",
                        "description": "Session ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "List ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UnauthorizedResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "No valid session key was provided as basic auth password."
                    }
                },
                "type": "object"
            },
            "ValidationErrorResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Some fields invalid: email, confirmed, html_email"
                    }
                },
                "type": "object"
            },
            "BadRequestResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Invalid json format"
                    }
                },
                "type": "object"
            },
            "AlreadyExistsResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "This resource already exists."
                    }
                },
                "type": "object"
            },
            "NotFoundErrorResponse": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "There is no entity with that ID."
                    }
                },
                "type": "object"
            },
            "CursorPagination": {
                "properties": {
                    "total": {
                        "type": "integer",
                        "example": 100
                    },
                    "limit": {
                        "type": "integer",
                        "example": 25
                    },
                    "has_more": {
                        "type": "boolean",
                        "example": true
                    },
                    "next_cursor": {
                        "type": "integer",
                        "example": 129
                    }
                },
                "type": "object"
            },
            "CreateAdministratorRequest": {
                "required": [
                    "login_name",
                    "password",
                    "email",
                    "super_user"
                ],
                "properties": {
                    "login_name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 3,
                        "example": "admin"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "maxLength": 255,
                        "minLength": 6,
                        "example": "StrongP@ssw0rd"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "admin@example.com"
                    },
                    "super_user": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "UpdateAdministratorRequest": {
                "properties": {
                    "login_name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 3,
                        "example": "admin"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "maxLength": 255,
                        "minLength": 6,
                        "example": "StrongP@ssw0rd"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "admin@example.com"
                    },
                    "super_user": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "CreateAdminAttributeDefinitionRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "string",
                        "example": "Country"
                    },
                    "type": {
                        "type": "string",
                        "example": "checkbox"
                    },
                    "order": {
                        "type": "number",
                        "example": 12
                    },
                    "default_value": {
                        "type": "string",
                        "example": "United States"
                    },
                    "required": {
                        "type": "boolean",
                        "example": true
                    },
                    "table_name": {
                        "type": "string",
                        "example": "list_attributes"
                    }
                },
                "type": "object"
            },
            "Administrator": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "login_name": {
                        "type": "string",
                        "example": "admin"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "admin@example.com"
                    },
                    "super_user": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-29T12:34:56+00:00"
                    }
                },
                "type": "object"
            },
            "AdminAttributeDefinition": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Country"
                    },
                    "type": {
                        "type": "string",
                        "example": "select"
                    },
                    "list_order": {
                        "type": "integer",
                        "example": 12
                    },
                    "default_value": {
                        "type": "string",
                        "example": "United States"
                    },
                    "required": {
                        "type": "boolean",
                        "example": true
                    },
                    "table_name": {
                        "type": "string",
                        "example": "ukcounties"
                    }
                },
                "type": "object"
            },
            "AdminAttributeValue": {
                "properties": {
                    "administrator": {
                        "$ref": "#/components/schemas/Administrator"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/AttributeDefinition"
                    },
                    "value": {
                        "type": "string",
                        "example": "United States"
                    }
                },
                "type": "object"
            },
            "MessageContentRequest": {
                "required": [
                    "subject",
                    "text",
                    "text_message",
                    "footer"
                ],
                "properties": {
                    "subject": {
                        "type": "string",
                        "example": "Campaign Subject"
                    },
                    "text": {
                        "type": "string",
                        "example": "Full text content"
                    },
                    "text_message": {
                        "type": "string",
                        "example": "Short text message"
                    },
                    "footer": {
                        "type": "string",
                        "example": "Unsubscribe link here"
                    }
                },
                "type": "object"
            },
            "MessageFormatRequest": {
                "required": [
                    "html_formated",
                    "send_format",
                    "format_options"
                ],
                "properties": {
                    "html_formated": {
                        "type": "boolean",
                        "example": true
                    },
                    "send_format": {
                        "type": "string",
                        "enum": [
                            "html",
                            "text",
                            "invite"
                        ],
                        "example": "html"
                    },
                    "format_options": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "text",
                                "html",
                                "pdf"
                            ]
                        },
                        "example": [
                            "html"
                        ]
                    }
                },
                "type": "object"
            },
            "MessageMetadataRequest": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "draft"
                    }
                },
                "type": "object"
            },
            "MessageScheduleRequest": {
                "required": [
                    "embargo"
                ],
                "properties": {
                    "embargo": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-17 09:00:00"
                    },
                    "repeat_interval": {
                        "type": "string",
                        "example": "24 hours"
                    },
                    "repeat_until": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-30T00:00:00+04:00"
                    },
                    "requeue_interval": {
                        "type": "string",
                        "example": "12 hours"
                    },
                    "requeue_until": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-20T00:00:00+04:00"
                    }
                },
                "type": "object"
            },
            "MessageOptionsRequest": {
                "required": [
                    "from_field"
                ],
                "properties": {
                    "from_field": {
                        "type": "string",
                        "example": "info@example.com"
                    },
                    "to_field": {
                        "type": "string",
                        "example": "subscriber@example.com"
                    },
                    "reply_to": {
                        "type": "string",
                        "example": "reply@example.com"
                    },
                    "user_selection": {
                        "type": "string",
                        "example": "all-active-users"
                    }
                },
                "type": "object"
            },
            "TemplateImage": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 12
                    },
                    "template_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "mimetype": {
                        "type": "string",
                        "example": "image/png",
                        "nullable": true
                    },
                    "filename": {
                        "type": "string",
                        "example": "header.png",
                        "nullable": true
                    },
                    "data": {
                        "description": "Base64-encoded image data",
                        "type": "string",
                        "format": "byte",
                        "example": "iVBORw0KGgoAAAANSUhEUgAAA...",
                        "nullable": true
                    },
                    "width": {
                        "type": "integer",
                        "example": 600,
                        "nullable": true
                    },
                    "height": {
                        "type": "integer",
                        "example": 200,
                        "nullable": true
                    }
                },
                "type": "object",
                "nullable": true
            },
            "Template": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Newsletter"
                    },
                    "content": {
                        "type": "string",
                        "example": "Hello World!",
                        "nullable": true
                    },
                    "text": {
                        "type": "string",
                        "nullable": true
                    },
                    "order": {
                        "type": "integer",
                        "nullable": true
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TemplateImage"
                        },
                        "nullable": true
                    }
                },
                "type": "object",
                "nullable": true
            },
            "Message": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "unique_id": {
                        "type": "string",
                        "example": "2df6b147-8470-45ed-8e4e-86aa01af400d"
                    },
                    "template": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Template"
                            }
                        ],
                        "nullable": true
                    },
                    "message_content": {
                        "properties": {
                            "subject": {
                                "type": "string",
                                "example": "Newsletter"
                            },
                            "text": {
                                "type": "string",
                                "example": "Hello World!"
                            },
                            "text_message": {
                                "type": "string"
                            },
                            "footer": {
                                "type": "string",
                                "example": "This is a footer"
                            }
                        },
                        "type": "object"
                    },
                    "message_format": {
                        "properties": {
                            "html_formated": {
                                "type": "boolean"
                            },
                            "send_format": {
                                "type": "string",
                                "example": "text",
                                "nullable": true
                            },
                            "as_text": {
                                "type": "boolean",
                                "example": true
                            },
                            "as_html": {
                                "type": "boolean"
                            },
                            "as_pdf": {
                                "type": "boolean"
                            },
                            "as_text_and_html": {
                                "type": "boolean"
                            },
                            "as_text_and_pdf": {
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "message_metadata": {
                        "properties": {
                            "status": {
                                "type": "string",
                                "example": "sent"
                            },
                            "processed": {
                                "type": "boolean",
                                "example": true
                            },
                            "views": {
                                "type": "integer",
                                "example": 12
                            },
                            "bounce_count": {
                                "type": "integer"
                            },
                            "entered": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "sent": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "message_schedule": {
                        "properties": {
                            "repeat_interval": {
                                "type": "string",
                                "nullable": true
                            },
                            "repeat_until": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "requeue_interval": {
                                "type": "string",
                                "nullable": true
                            },
                            "requeue_until": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "embargo": {
                                "type": "string",
                                "example": "2023-01-01T12:00:00Z",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "message_options": {
                        "properties": {
                            "from_field": {
                                "type": "string",
                                "example": " My Name <my@email.com>",
                                "nullable": true
                            },
                            "to_field": {
                                "type": "string",
                                "example": "",
                                "nullable": true
                            },
                            "reply_to": {
                                "type": "string",
                                "nullable": true
                            },
                            "user_selection": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateSubscriberListRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "string",
                        "example": "News"
                    },
                    "description": {
                        "type": "string",
                        "example": "News (and some fun stuff)"
                    },
                    "list_position": {
                        "type": "number",
                        "example": 12
                    },
                    "public": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "CreateSubscriberAttributeDefinitionRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "string",
                        "example": "Country"
                    },
                    "type": {
                        "type": "string",
                        "example": "checkbox"
                    },
                    "order": {
                        "type": "number",
                        "example": 12
                    },
                    "default_value": {
                        "type": "string",
                        "example": "United States"
                    },
                    "required": {
                        "type": "boolean",
                        "example": true
                    },
                    "table_name": {
                        "type": "string",
                        "example": "list_attributes"
                    }
                },
                "type": "object"
            },
            "CreateSubscriberRequest": {
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "string",
                        "example": "admin@example.com"
                    },
                    "request_confirmation": {
                        "type": "boolean",
                        "example": false
                    },
                    "html_email": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "UpdateSubscriberRequest": {
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "string",
                        "example": "admin@example.com"
                    },
                    "confirmed": {
                        "type": "boolean",
                        "example": false
                    },
                    "blacklisted": {
                        "type": "boolean",
                        "example": false
                    },
                    "html_email": {
                        "type": "boolean",
                        "example": false
                    },
                    "disabled": {
                        "type": "boolean",
                        "example": false
                    },
                    "additional_data": {
                        "type": "string",
                        "example": "asdf"
                    }
                },
                "type": "object"
            },
            "ExportSubscriberRequest": {
                "properties": {
                    "date_type": {
                        "description": "What date needs to be used for filtering (any, signup, changed, changelog, subscribed)",
                        "default": "any",
                        "enum": [
                            "any",
                            "signup",
                            "changed",
                            "changelog",
                            "subscribed"
                        ]
                    },
                    "list_id": {
                        "description": "List ID from where to export",
                        "type": "integer"
                    },
                    "date_from": {
                        "description": "Start date for filtering (format: Y-m-d)",
                        "type": "string",
                        "format": "date"
                    },
                    "date_to": {
                        "description": "End date for filtering (format: Y-m-d)",
                        "type": "string",
                        "format": "date"
                    },
                    "columns": {
                        "description": "Columns to include in the export",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": [
                            "id",
                            "email",
                            "confirmed",
                            "blacklisted",
                            "bounceCount",
                            "createdAt",
                            "updatedAt",
                            "uniqueId",
                            "htmlEmail",
                            "disabled",
                            "extraData"
                        ]
                    }
                },
                "type": "object"
            },
            "SubscriberList": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 2
                    },
                    "name": {
                        "type": "string",
                        "example": "Newsletter"
                    },
                    "description": {
                        "type": "string",
                        "example": "Monthly updates"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-01T10:00:00Z"
                    },
                    "list_position": {
                        "type": "integer",
                        "example": 1
                    },
                    "subject_prefix": {
                        "type": "string",
                        "example": "Newsletter: "
                    },
                    "public": {
                        "type": "boolean",
                        "example": true
                    },
                    "category": {
                        "type": "string",
                        "example": "News"
                    }
                },
                "type": "object"
            },
            "Subscriber": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "email": {
                        "type": "string",
                        "example": "subscriber@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "confirmed": {
                        "type": "boolean",
                        "example": true
                    },
                    "blacklisted": {
                        "type": "boolean",
                        "example": false
                    },
                    "bounce_count": {
                        "type": "integer",
                        "example": 0
                    },
                    "unique_id": {
                        "type": "string",
                        "example": "69f4e92cf50eafca9627f35704f030f4"
                    },
                    "html_email": {
                        "type": "boolean",
                        "example": true
                    },
                    "disabled": {
                        "type": "boolean",
                        "example": false
                    },
                    "subscribed_lists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubscriberList"
                        }
                    }
                },
                "type": "object"
            },
            "SubscriberOnly": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "email": {
                        "type": "string",
                        "example": "subscriber@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "confirmed": {
                        "type": "boolean",
                        "example": true
                    },
                    "blacklisted": {
                        "type": "boolean",
                        "example": false
                    },
                    "bounce_count": {
                        "type": "integer",
                        "example": 0
                    },
                    "unique_id": {
                        "type": "string",
                        "example": "69f4e92cf50eafca9627f35704f030f4"
                    },
                    "html_email": {
                        "type": "boolean",
                        "example": true
                    },
                    "disabled": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "Subscription": {
                "properties": {
                    "subscriber": {
                        "$ref": "#/components/schemas/SubscriberOnly"
                    },
                    "subscriber_list": {
                        "$ref": "#/components/schemas/SubscriberList"
                    },
                    "subscription_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "AttributeDefinition": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Country"
                    },
                    "type": {
                        "type": "string",
                        "example": "checkbox"
                    },
                    "list_order": {
                        "type": "integer",
                        "example": 12
                    },
                    "default_value": {
                        "type": "string",
                        "example": "United States"
                    },
                    "required": {
                        "type": "boolean",
                        "example": true
                    },
                    "table_name": {
                        "type": "string",
                        "example": "list_attributes"
                    }
                },
                "type": "object"
            },
            "SubscriberAttributeValue": {
                "properties": {
                    "subscriber": {
                        "$ref": "#/components/schemas/Subscriber"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/AttributeDefinition"
                    },
                    "value": {
                        "type": "string",
                        "example": "United States"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "admin-attributes",
            "description": "admin-attributes"
        },
        {
            "name": "administrators",
            "description": "administrators"
        },
        {
            "name": "sessions",
            "description": "sessions"
        },
        {
            "name": "campaigns",
            "description": "campaigns"
        },
        {
            "name": "templates",
            "description": "templates"
        },
        {
            "name": "subscriptions",
            "description": "subscriptions"
        },
        {
            "name": "subscriber-attributes",
            "description": "subscriber-attributes"
        },
        {
            "name": "subscribers",
            "description": "subscribers"
        },
        {
            "name": "lists",
            "description": "lists"
        }
    ]
}